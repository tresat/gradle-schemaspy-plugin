package com.tomtresansky.gradle.plugin.schemaspy

import org.gradle.api.Task
import org.gradle.api.reporting.ConfigurableReport
import org.gradle.api.reporting.DirectoryReport
import org.gradle.api.reporting.internal.TaskGeneratedSingleDirectoryReport
import org.gradle.api.reporting.internal.TaskReportContainer

import com.google.common.base.Preconditions

/**
 * Concrete implementation of {@link SchemaSpyReportContainer} which represents the set 
 * of reports that can be generated by the {@link SchemaSpyReportTask}.
 * <P>
 * This will point to the <code>index.html</code> file produced by SchemaSpy.
 * <p>
 * Just like {@link SchemaSpyExtension} this class can <strong>NOT</strong> be <code>final</code>.
 * 
 * @author Tom
 */
 class DefaultSchemaSpyReportContainer extends TaskReportContainer<TaskGeneratedSingleDirectoryReport> implements SchemaSpyReportContainer {
  /**
   * Constructor passes the {@link Task task} param on to the super-constructor, then adds a reference to 
   * the <code>index.html</code> file produced by SchemaSpy to the reports collection.
   * 
   * @param task the current instance of the task using this container (<em>may <strong>NOT</strong> be <code>null</code></em>)
   */
  DefaultSchemaSpyReportContainer(Task task) {
    super(ConfigurableReport.class, task)
    
    Preconditions.checkNotNull(task, 'task can NOT be null!')
    
    add(TaskGeneratedSingleDirectoryReport.class, 'html', task, 'index.html')
  }

  @Override
  public DirectoryReport getHtml() {
    return (DirectoryReport) getByName('html')
  }
}
